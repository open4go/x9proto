// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v5.29.3
// source: member.proto

package member

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// UserFrom 用户来源的枚举
type UserFrom int32

const (
	UserFrom_UNKNOWN  UserFrom = 0 // 未知来源
	UserFrom_SOURCE_A UserFrom = 1 // 来源 A
	UserFrom_SOURCE_B UserFrom = 2 // 来源 B
)

// Enum value maps for UserFrom.
var (
	UserFrom_name = map[int32]string{
		0: "UNKNOWN",
		1: "SOURCE_A",
		2: "SOURCE_B",
	}
	UserFrom_value = map[string]int32{
		"UNKNOWN":  0,
		"SOURCE_A": 1,
		"SOURCE_B": 2,
	}
)

func (x UserFrom) Enum() *UserFrom {
	p := new(UserFrom)
	*p = x
	return p
}

func (x UserFrom) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UserFrom) Descriptor() protoreflect.EnumDescriptor {
	return file_member_proto_enumTypes[0].Descriptor()
}

func (UserFrom) Type() protoreflect.EnumType {
	return &file_member_proto_enumTypes[0]
}

func (x UserFrom) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UserFrom.Descriptor instead.
func (UserFrom) EnumDescriptor() ([]byte, []int) {
	return file_member_proto_rawDescGZIP(), []int{0}
}

// UserGender 用户性别的枚举
type UserGender int32

const (
	UserGender_GENDER_UNKNOWN UserGender = 0 // 未知性别
	UserGender_MALE           UserGender = 1 // 男性
	UserGender_FEMALE         UserGender = 2 // 女性
)

// Enum value maps for UserGender.
var (
	UserGender_name = map[int32]string{
		0: "GENDER_UNKNOWN",
		1: "MALE",
		2: "FEMALE",
	}
	UserGender_value = map[string]int32{
		"GENDER_UNKNOWN": 0,
		"MALE":           1,
		"FEMALE":         2,
	}
)

func (x UserGender) Enum() *UserGender {
	p := new(UserGender)
	*p = x
	return p
}

func (x UserGender) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UserGender) Descriptor() protoreflect.EnumDescriptor {
	return file_member_proto_enumTypes[1].Descriptor()
}

func (UserGender) Type() protoreflect.EnumType {
	return &file_member_proto_enumTypes[1]
}

func (x UserGender) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UserGender.Descriptor instead.
func (UserGender) EnumDescriptor() ([]byte, []int) {
	return file_member_proto_rawDescGZIP(), []int{1}
}

// MemberStatus 会员状态的枚举
type MemberStatus int32

const (
	MemberStatus_STATUS_UNKNOWN MemberStatus = 0 // 未知状态
	MemberStatus_ACTIVE         MemberStatus = 1 // 活跃状态
	MemberStatus_INACTIVE       MemberStatus = 2 // 非活跃状态
	MemberStatus_BANNED         MemberStatus = 3 // 被禁用状态
	MemberStatus_SUSPENDED      MemberStatus = 4 // 暂停状态
)

// Enum value maps for MemberStatus.
var (
	MemberStatus_name = map[int32]string{
		0: "STATUS_UNKNOWN",
		1: "ACTIVE",
		2: "INACTIVE",
		3: "BANNED",
		4: "SUSPENDED",
	}
	MemberStatus_value = map[string]int32{
		"STATUS_UNKNOWN": 0,
		"ACTIVE":         1,
		"INACTIVE":       2,
		"BANNED":         3,
		"SUSPENDED":      4,
	}
)

func (x MemberStatus) Enum() *MemberStatus {
	p := new(MemberStatus)
	*p = x
	return p
}

func (x MemberStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MemberStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_member_proto_enumTypes[2].Descriptor()
}

func (MemberStatus) Type() protoreflect.EnumType {
	return &file_member_proto_enumTypes[2]
}

func (x MemberStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MemberStatus.Descriptor instead.
func (MemberStatus) EnumDescriptor() ([]byte, []int) {
	return file_member_proto_rawDescGZIP(), []int{2}
}

// FetchByIDRequest 会员id
type FetchByIDRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"` // 用户的ID
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FetchByIDRequest) Reset() {
	*x = FetchByIDRequest{}
	mi := &file_member_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FetchByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FetchByIDRequest) ProtoMessage() {}

func (x *FetchByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_member_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FetchByIDRequest.ProtoReflect.Descriptor instead.
func (*FetchByIDRequest) Descriptor() ([]byte, []int) {
	return file_member_proto_rawDescGZIP(), []int{0}
}

func (x *FetchByIDRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// FetchByThirdPartyRequest 三方信息
type FetchByThirdPartyRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Openid        string                 `protobuf:"bytes,1,opt,name=openid,proto3" json:"openid,omitempty"` // 用户的 OpenID
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FetchByThirdPartyRequest) Reset() {
	*x = FetchByThirdPartyRequest{}
	mi := &file_member_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FetchByThirdPartyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FetchByThirdPartyRequest) ProtoMessage() {}

func (x *FetchByThirdPartyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_member_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FetchByThirdPartyRequest.ProtoReflect.Descriptor instead.
func (*FetchByThirdPartyRequest) Descriptor() ([]byte, []int) {
	return file_member_proto_rawDescGZIP(), []int{1}
}

func (x *FetchByThirdPartyRequest) GetOpenid() string {
	if x != nil {
		return x.Openid
	}
	return ""
}

// ThirdPartyInfo 三方信息
type ThirdPartyInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Openid        string                 `protobuf:"bytes,1,opt,name=openid,proto3" json:"openid,omitempty"`                  // 用户的 OpenID
	Appid         string                 `protobuf:"bytes,2,opt,name=appid,proto3" json:"appid,omitempty"`                    // 应用 ID
	MchId         string                 `protobuf:"bytes,3,opt,name=mch_id,json=mchId,proto3" json:"mch_id,omitempty"`       // 商户 ID
	Platform      string                 `protobuf:"bytes,4,opt,name=platform,proto3" json:"platform,omitempty"`              // 三方平台名称（如 WeChat, Alipay 等）
	UnionId       string                 `protobuf:"bytes,5,opt,name=union_id,json=unionId,proto3" json:"union_id,omitempty"` // 联合 ID（如果适用）
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ThirdPartyInfo) Reset() {
	*x = ThirdPartyInfo{}
	mi := &file_member_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ThirdPartyInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ThirdPartyInfo) ProtoMessage() {}

func (x *ThirdPartyInfo) ProtoReflect() protoreflect.Message {
	mi := &file_member_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ThirdPartyInfo.ProtoReflect.Descriptor instead.
func (*ThirdPartyInfo) Descriptor() ([]byte, []int) {
	return file_member_proto_rawDescGZIP(), []int{2}
}

func (x *ThirdPartyInfo) GetOpenid() string {
	if x != nil {
		return x.Openid
	}
	return ""
}

func (x *ThirdPartyInfo) GetAppid() string {
	if x != nil {
		return x.Appid
	}
	return ""
}

func (x *ThirdPartyInfo) GetMchId() string {
	if x != nil {
		return x.MchId
	}
	return ""
}

func (x *ThirdPartyInfo) GetPlatform() string {
	if x != nil {
		return x.Platform
	}
	return ""
}

func (x *ThirdPartyInfo) GetUnionId() string {
	if x != nil {
		return x.UnionId
	}
	return ""
}

// 注册会员请求消息
type RegisterMemberRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	ThirdParty     *ThirdPartyInfo        `protobuf:"bytes,1,opt,name=third_party,json=thirdParty,proto3" json:"third_party,omitempty"`
	AdditionalInfo string                 `protobuf:"bytes,2,opt,name=additional_info,json=additionalInfo,proto3" json:"additional_info,omitempty"` // 可选的附加信息
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *RegisterMemberRequest) Reset() {
	*x = RegisterMemberRequest{}
	mi := &file_member_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterMemberRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterMemberRequest) ProtoMessage() {}

func (x *RegisterMemberRequest) ProtoReflect() protoreflect.Message {
	mi := &file_member_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterMemberRequest.ProtoReflect.Descriptor instead.
func (*RegisterMemberRequest) Descriptor() ([]byte, []int) {
	return file_member_proto_rawDescGZIP(), []int{3}
}

func (x *RegisterMemberRequest) GetThirdParty() *ThirdPartyInfo {
	if x != nil {
		return x.ThirdParty
	}
	return nil
}

func (x *RegisterMemberRequest) GetAdditionalInfo() string {
	if x != nil {
		return x.AdditionalInfo
	}
	return ""
}

// 注册会员响应消息
type RegisterMemberResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`            // 注册是否成功
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`             // 反馈信息
	UserId        string                 `protobuf:"bytes,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"` // 新注册会员的 ID（如果成功）
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RegisterMemberResponse) Reset() {
	*x = RegisterMemberResponse{}
	mi := &file_member_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterMemberResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterMemberResponse) ProtoMessage() {}

func (x *RegisterMemberResponse) ProtoReflect() protoreflect.Message {
	mi := &file_member_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterMemberResponse.ProtoReflect.Descriptor instead.
func (*RegisterMemberResponse) Descriptor() ([]byte, []int) {
	return file_member_proto_rawDescGZIP(), []int{4}
}

func (x *RegisterMemberResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *RegisterMemberResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *RegisterMemberResponse) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

// MemberDetail 会员详情信息
type MemberDetail struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                               // 用户 ID
	Source        UserFrom               `protobuf:"varint,2,opt,name=source,proto3,enum=member.UserFrom" json:"source,omitempty"` // 用户来源
	Identity      *IdentityInfo          `protobuf:"bytes,3,opt,name=identity,proto3" json:"identity,omitempty"`                   // 客户信息
	Login         *LoginInfo             `protobuf:"bytes,4,opt,name=login,proto3" json:"login,omitempty"`                         // 登录审计信息
	Assets        *AssetsInfo            `protobuf:"bytes,5,opt,name=assets,proto3" json:"assets,omitempty"`                       // 个人资产
	Invitee       *InviterInfo           `protobuf:"bytes,6,opt,name=invitee,proto3" json:"invitee,omitempty"`                     // 当前邀请人情况
	Permission    *PermissionInfo        `protobuf:"bytes,7,opt,name=permission,proto3" json:"permission,omitempty"`               // 权限管理
	ThirdParty    *ThirdPartyInfo        `protobuf:"bytes,8,opt,name=third_party,json=thirdParty,proto3" json:"third_party,omitempty"`
	Status        MemberStatus           `protobuf:"varint,9,opt,name=status,proto3,enum=member.MemberStatus" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MemberDetail) Reset() {
	*x = MemberDetail{}
	mi := &file_member_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MemberDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemberDetail) ProtoMessage() {}

func (x *MemberDetail) ProtoReflect() protoreflect.Message {
	mi := &file_member_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MemberDetail.ProtoReflect.Descriptor instead.
func (*MemberDetail) Descriptor() ([]byte, []int) {
	return file_member_proto_rawDescGZIP(), []int{5}
}

func (x *MemberDetail) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *MemberDetail) GetSource() UserFrom {
	if x != nil {
		return x.Source
	}
	return UserFrom_UNKNOWN
}

func (x *MemberDetail) GetIdentity() *IdentityInfo {
	if x != nil {
		return x.Identity
	}
	return nil
}

func (x *MemberDetail) GetLogin() *LoginInfo {
	if x != nil {
		return x.Login
	}
	return nil
}

func (x *MemberDetail) GetAssets() *AssetsInfo {
	if x != nil {
		return x.Assets
	}
	return nil
}

func (x *MemberDetail) GetInvitee() *InviterInfo {
	if x != nil {
		return x.Invitee
	}
	return nil
}

func (x *MemberDetail) GetPermission() *PermissionInfo {
	if x != nil {
		return x.Permission
	}
	return nil
}

func (x *MemberDetail) GetThirdParty() *ThirdPartyInfo {
	if x != nil {
		return x.ThirdParty
	}
	return nil
}

func (x *MemberDetail) GetStatus() MemberStatus {
	if x != nil {
		return x.Status
	}
	return MemberStatus_STATUS_UNKNOWN
}

// IdentityInfo 标识信息
type IdentityInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AccountId     string                 `protobuf:"bytes,1,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`           // 备注信息
	Nickname      string                 `protobuf:"bytes,2,opt,name=nickname,proto3" json:"nickname,omitempty"`                              // 昵称
	UserName      string                 `protobuf:"bytes,3,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`              // 用户名
	Birthday      string                 `protobuf:"bytes,4,opt,name=birthday,proto3" json:"birthday,omitempty"`                              // 生日
	JoinAt        *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=join_at,json=joinAt,proto3" json:"join_at,omitempty"`                    // 加入时间（注册时间）
	Gender        UserGender             `protobuf:"varint,6,opt,name=gender,proto3,enum=member.UserGender" json:"gender,omitempty"`          // 性别
	WxLoginId     string                 `protobuf:"bytes,7,opt,name=wx_login_id,json=wxLoginId,proto3" json:"wx_login_id,omitempty"`         // 微信登录信息
	Phone         string                 `protobuf:"bytes,8,opt,name=phone,proto3" json:"phone,omitempty"`                                    // 手机号
	RegisterIp    string                 `protobuf:"bytes,9,opt,name=register_ip,json=registerIp,proto3" json:"register_ip,omitempty"`        // 注册 IP
	RegisterArea  string                 `protobuf:"bytes,10,opt,name=register_area,json=registerArea,proto3" json:"register_area,omitempty"` // 注册地区
	Avatar        string                 `protobuf:"bytes,11,opt,name=avatar,proto3" json:"avatar,omitempty"`                                 // 头像
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IdentityInfo) Reset() {
	*x = IdentityInfo{}
	mi := &file_member_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IdentityInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IdentityInfo) ProtoMessage() {}

func (x *IdentityInfo) ProtoReflect() protoreflect.Message {
	mi := &file_member_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IdentityInfo.ProtoReflect.Descriptor instead.
func (*IdentityInfo) Descriptor() ([]byte, []int) {
	return file_member_proto_rawDescGZIP(), []int{6}
}

func (x *IdentityInfo) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *IdentityInfo) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *IdentityInfo) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *IdentityInfo) GetBirthday() string {
	if x != nil {
		return x.Birthday
	}
	return ""
}

func (x *IdentityInfo) GetJoinAt() *timestamppb.Timestamp {
	if x != nil {
		return x.JoinAt
	}
	return nil
}

func (x *IdentityInfo) GetGender() UserGender {
	if x != nil {
		return x.Gender
	}
	return UserGender_GENDER_UNKNOWN
}

func (x *IdentityInfo) GetWxLoginId() string {
	if x != nil {
		return x.WxLoginId
	}
	return ""
}

func (x *IdentityInfo) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *IdentityInfo) GetRegisterIp() string {
	if x != nil {
		return x.RegisterIp
	}
	return ""
}

func (x *IdentityInfo) GetRegisterArea() string {
	if x != nil {
		return x.RegisterArea
	}
	return ""
}

func (x *IdentityInfo) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

// LoginInfo 登录信息
type LoginInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Times         uint64                 `protobuf:"varint,1,opt,name=times,proto3" json:"times,omitempty"`                                  // 登录时长
	Counter       uint64                 `protobuf:"varint,2,opt,name=counter,proto3" json:"counter,omitempty"`                              // 登录次数
	LastLoginAt   int64                  `protobuf:"varint,3,opt,name=last_login_at,json=lastLoginAt,proto3" json:"last_login_at,omitempty"` // 上次登录时间
	LoginAt       int64                  `protobuf:"varint,4,opt,name=login_at,json=loginAt,proto3" json:"login_at,omitempty"`               // 当前登录时间
	LoginIp       string                 `protobuf:"bytes,5,opt,name=login_ip,json=loginIp,proto3" json:"login_ip,omitempty"`                // 当前登录 IP
	LastLoginIp   string                 `protobuf:"bytes,6,opt,name=last_login_ip,json=lastLoginIp,proto3" json:"last_login_ip,omitempty"`  // 上次登录 IP
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LoginInfo) Reset() {
	*x = LoginInfo{}
	mi := &file_member_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LoginInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginInfo) ProtoMessage() {}

func (x *LoginInfo) ProtoReflect() protoreflect.Message {
	mi := &file_member_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginInfo.ProtoReflect.Descriptor instead.
func (*LoginInfo) Descriptor() ([]byte, []int) {
	return file_member_proto_rawDescGZIP(), []int{7}
}

func (x *LoginInfo) GetTimes() uint64 {
	if x != nil {
		return x.Times
	}
	return 0
}

func (x *LoginInfo) GetCounter() uint64 {
	if x != nil {
		return x.Counter
	}
	return 0
}

func (x *LoginInfo) GetLastLoginAt() int64 {
	if x != nil {
		return x.LastLoginAt
	}
	return 0
}

func (x *LoginInfo) GetLoginAt() int64 {
	if x != nil {
		return x.LoginAt
	}
	return 0
}

func (x *LoginInfo) GetLoginIp() string {
	if x != nil {
		return x.LoginIp
	}
	return ""
}

func (x *LoginInfo) GetLastLoginIp() string {
	if x != nil {
		return x.LastLoginIp
	}
	return ""
}

// PermissionInfo 权限信息
type PermissionInfo struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Access          uint64                 `protobuf:"varint,1,opt,name=access,proto3" json:"access,omitempty"`                                            // 权限等级
	AccessBits      []uint64               `protobuf:"varint,2,rep,packed,name=access_bits,json=accessBits,proto3" json:"access_bits,omitempty"`           // 登录次数（不存储）
	IsInternalStaff bool                   `protobuf:"varint,3,opt,name=is_internal_staff,json=isInternalStaff,proto3" json:"is_internal_staff,omitempty"` // 是否内部员工
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *PermissionInfo) Reset() {
	*x = PermissionInfo{}
	mi := &file_member_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PermissionInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PermissionInfo) ProtoMessage() {}

func (x *PermissionInfo) ProtoReflect() protoreflect.Message {
	mi := &file_member_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PermissionInfo.ProtoReflect.Descriptor instead.
func (*PermissionInfo) Descriptor() ([]byte, []int) {
	return file_member_proto_rawDescGZIP(), []int{8}
}

func (x *PermissionInfo) GetAccess() uint64 {
	if x != nil {
		return x.Access
	}
	return 0
}

func (x *PermissionInfo) GetAccessBits() []uint64 {
	if x != nil {
		return x.AccessBits
	}
	return nil
}

func (x *PermissionInfo) GetIsInternalStaff() bool {
	if x != nil {
		return x.IsInternalStaff
	}
	return false
}

// AssetsInfo 资产信息
type AssetsInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PointNum      int32                  `protobuf:"varint,1,opt,name=point_num,json=pointNum,proto3" json:"point_num,omitempty"`          // 点数
	CouponNum     int32                  `protobuf:"varint,2,opt,name=coupon_num,json=couponNum,proto3" json:"coupon_num,omitempty"`       // 积分
	Balance       float64                `protobuf:"fixed64,3,opt,name=balance,proto3" json:"balance,omitempty"`                           // 余额
	GiftBalance   int32                  `protobuf:"varint,4,opt,name=gift_balance,json=giftBalance,proto3" json:"gift_balance,omitempty"` // 礼物
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AssetsInfo) Reset() {
	*x = AssetsInfo{}
	mi := &file_member_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AssetsInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssetsInfo) ProtoMessage() {}

func (x *AssetsInfo) ProtoReflect() protoreflect.Message {
	mi := &file_member_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssetsInfo.ProtoReflect.Descriptor instead.
func (*AssetsInfo) Descriptor() ([]byte, []int) {
	return file_member_proto_rawDescGZIP(), []int{9}
}

func (x *AssetsInfo) GetPointNum() int32 {
	if x != nil {
		return x.PointNum
	}
	return 0
}

func (x *AssetsInfo) GetCouponNum() int32 {
	if x != nil {
		return x.CouponNum
	}
	return 0
}

func (x *AssetsInfo) GetBalance() float64 {
	if x != nil {
		return x.Balance
	}
	return 0
}

func (x *AssetsInfo) GetGiftBalance() int32 {
	if x != nil {
		return x.GiftBalance
	}
	return 0
}

// InviterInfo 邀请人信息
type InviterInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CurrentValue  int32                  `protobuf:"varint,1,opt,name=current_value,json=currentValue,proto3" json:"current_value,omitempty"` // 当前阶段已完成度
	NeedValue     int32                  `protobuf:"varint,2,opt,name=need_value,json=needValue,proto3" json:"need_value,omitempty"`          // 当前阶段还需完成值
	Turn          int32                  `protobuf:"varint,3,opt,name=turn,proto3" json:"turn,omitempty"`                                     // 邀请人数要求完成次数/每轮
	Total         int32                  `protobuf:"varint,4,opt,name=total,proto3" json:"total,omitempty"`                                   // 总共完成
	Invitee       []string               `protobuf:"bytes,5,rep,name=invitee,proto3" json:"invitee,omitempty"`                                // 被邀请人 ID 列表
	Inviter       string                 `protobuf:"bytes,6,opt,name=inviter,proto3" json:"inviter,omitempty"`                                // 邀请人 ID
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InviterInfo) Reset() {
	*x = InviterInfo{}
	mi := &file_member_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InviterInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InviterInfo) ProtoMessage() {}

func (x *InviterInfo) ProtoReflect() protoreflect.Message {
	mi := &file_member_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InviterInfo.ProtoReflect.Descriptor instead.
func (*InviterInfo) Descriptor() ([]byte, []int) {
	return file_member_proto_rawDescGZIP(), []int{10}
}

func (x *InviterInfo) GetCurrentValue() int32 {
	if x != nil {
		return x.CurrentValue
	}
	return 0
}

func (x *InviterInfo) GetNeedValue() int32 {
	if x != nil {
		return x.NeedValue
	}
	return 0
}

func (x *InviterInfo) GetTurn() int32 {
	if x != nil {
		return x.Turn
	}
	return 0
}

func (x *InviterInfo) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *InviterInfo) GetInvitee() []string {
	if x != nil {
		return x.Invitee
	}
	return nil
}

func (x *InviterInfo) GetInviter() string {
	if x != nil {
		return x.Inviter
	}
	return ""
}

var File_member_proto protoreflect.FileDescriptor

var file_member_proto_rawDesc = string([]byte{
	0x0a, 0x0c, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06,
	0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x22, 0x0a, 0x10, 0x46, 0x65, 0x74, 0x63, 0x68,
	0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x32, 0x0a, 0x18, 0x46,
	0x65, 0x74, 0x63, 0x68, 0x42, 0x79, 0x54, 0x68, 0x69, 0x72, 0x64, 0x50, 0x61, 0x72, 0x74, 0x79,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x70, 0x65, 0x6e, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x64, 0x22,
	0x8c, 0x01, 0x0a, 0x0e, 0x54, 0x68, 0x69, 0x72, 0x64, 0x50, 0x61, 0x72, 0x74, 0x79, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x70,
	0x70, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x70, 0x70, 0x69, 0x64,
	0x12, 0x15, 0x0a, 0x06, 0x6d, 0x63, 0x68, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x6d, 0x63, 0x68, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x12, 0x19, 0x0a, 0x08, 0x75, 0x6e, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x75, 0x6e, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x79,
	0x0a, 0x15, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x37, 0x0a, 0x0b, 0x74, 0x68, 0x69, 0x72, 0x64,
	0x5f, 0x70, 0x61, 0x72, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x2e, 0x54, 0x68, 0x69, 0x72, 0x64, 0x50, 0x61, 0x72, 0x74, 0x79,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x74, 0x68, 0x69, 0x72, 0x64, 0x50, 0x61, 0x72, 0x74, 0x79,
	0x12, 0x27, 0x0a, 0x0f, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x69,
	0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x61, 0x64, 0x64, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x65, 0x0a, 0x16, 0x52, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x65, 0x72, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x18, 0x0a,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x22, 0x9d, 0x03, 0x0a, 0x0c, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x28, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x10, 0x2e, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x46,
	0x72, 0x6f, 0x6d, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x30, 0x0a, 0x08, 0x69,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x2e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x08, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x27, 0x0a,
	0x05, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x05, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x2a, 0x0a, 0x06, 0x61, 0x73, 0x73, 0x65, 0x74, 0x73,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x2e,
	0x41, 0x73, 0x73, 0x65, 0x74, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x06, 0x61, 0x73, 0x73, 0x65,
	0x74, 0x73, 0x12, 0x2d, 0x0a, 0x07, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x2e, 0x49, 0x6e, 0x76,
	0x69, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65,
	0x65, 0x12, 0x36, 0x0a, 0x0a, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x2e, 0x50,
	0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x70,
	0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x37, 0x0a, 0x0b, 0x74, 0x68, 0x69,
	0x72, 0x64, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16,
	0x2e, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x2e, 0x54, 0x68, 0x69, 0x72, 0x64, 0x50, 0x61, 0x72,
	0x74, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x74, 0x68, 0x69, 0x72, 0x64, 0x50, 0x61, 0x72,
	0x74, 0x79, 0x12, 0x2c, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x14, 0x2e, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x2e, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x22, 0xf7, 0x02, 0x0a, 0x0c, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64,
	0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x69, 0x72,
	0x74, 0x68, 0x64, 0x61, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x69, 0x72,
	0x74, 0x68, 0x64, 0x61, 0x79, 0x12, 0x33, 0x0a, 0x07, 0x6a, 0x6f, 0x69, 0x6e, 0x5f, 0x61, 0x74,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x06, 0x6a, 0x6f, 0x69, 0x6e, 0x41, 0x74, 0x12, 0x2a, 0x0a, 0x06, 0x67, 0x65,
	0x6e, 0x64, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x6d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x47, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x52, 0x06,
	0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0b, 0x77, 0x78, 0x5f, 0x6c, 0x6f, 0x67,
	0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x77, 0x78, 0x4c,
	0x6f, 0x67, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x1f, 0x0a, 0x0b,
	0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x70, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x49, 0x70, 0x12, 0x23, 0x0a,
	0x0d, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x61, 0x72, 0x65, 0x61, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x41, 0x72,
	0x65, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x22, 0xb9, 0x01, 0x0a, 0x09, 0x4c,
	0x6f, 0x67, 0x69, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x12, 0x18,
	0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x12, 0x22, 0x0a, 0x0d, 0x6c, 0x61, 0x73, 0x74,
	0x5f, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0b, 0x6c, 0x61, 0x73, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x41, 0x74, 0x12, 0x19, 0x0a, 0x08,
	0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07,
	0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x41, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x6c, 0x6f, 0x67, 0x69, 0x6e,
	0x5f, 0x69, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6c, 0x6f, 0x67, 0x69, 0x6e,
	0x49, 0x70, 0x12, 0x22, 0x0a, 0x0d, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6c, 0x6f, 0x67, 0x69, 0x6e,
	0x5f, 0x69, 0x70, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6c, 0x61, 0x73, 0x74, 0x4c,
	0x6f, 0x67, 0x69, 0x6e, 0x49, 0x70, 0x22, 0x75, 0x0a, 0x0e, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x62, 0x69, 0x74, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x04, 0x52, 0x0a, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x42, 0x69, 0x74,
	0x73, 0x12, 0x2a, 0x0a, 0x11, 0x69, 0x73, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c,
	0x5f, 0x73, 0x74, 0x61, 0x66, 0x66, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x69, 0x73,
	0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x53, 0x74, 0x61, 0x66, 0x66, 0x22, 0x85, 0x01,
	0x0a, 0x0a, 0x41, 0x73, 0x73, 0x65, 0x74, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1b, 0x0a, 0x09,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x08, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x4e, 0x75, 0x6d, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x75,
	0x70, 0x6f, 0x6e, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x63,
	0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x4e, 0x75, 0x6d, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x61, 0x6c, 0x61,
	0x6e, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e,
	0x63, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x67, 0x69, 0x66, 0x74, 0x5f, 0x62, 0x61, 0x6c, 0x61, 0x6e,
	0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x67, 0x69, 0x66, 0x74, 0x42, 0x61,
	0x6c, 0x61, 0x6e, 0x63, 0x65, 0x22, 0xaf, 0x01, 0x0a, 0x0b, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65,
	0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74,
	0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x6e, 0x65,
	0x65, 0x64, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09,
	0x6e, 0x65, 0x65, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x75, 0x72,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x75, 0x72, 0x6e, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x65, 0x18, 0x05,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x72, 0x2a, 0x33, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x46,
	0x72, 0x6f, 0x6d, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00,
	0x12, 0x0c, 0x0a, 0x08, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x41, 0x10, 0x01, 0x12, 0x0c,
	0x0a, 0x08, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x42, 0x10, 0x02, 0x2a, 0x36, 0x0a, 0x0a,
	0x55, 0x73, 0x65, 0x72, 0x47, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x0e, 0x47, 0x45,
	0x4e, 0x44, 0x45, 0x52, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x08,
	0x0a, 0x04, 0x4d, 0x41, 0x4c, 0x45, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x46, 0x45, 0x4d, 0x41,
	0x4c, 0x45, 0x10, 0x02, 0x2a, 0x57, 0x0a, 0x0c, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x0e, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55,
	0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x41, 0x43, 0x54, 0x49,
	0x56, 0x45, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x49, 0x4e, 0x41, 0x43, 0x54, 0x49, 0x56, 0x45,
	0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06, 0x42, 0x41, 0x4e, 0x4e, 0x45, 0x44, 0x10, 0x03, 0x12, 0x0d,
	0x0a, 0x09, 0x53, 0x55, 0x53, 0x50, 0x45, 0x4e, 0x44, 0x45, 0x44, 0x10, 0x04, 0x32, 0xc9, 0x02,
	0x0a, 0x11, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x4f, 0x0a, 0x0e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1d, 0x2e, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x2e, 0x52,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x2e, 0x52, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41, 0x0a, 0x0f, 0x46, 0x65, 0x74, 0x63, 0x68, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x42, 0x79, 0x49, 0x44, 0x12, 0x18, 0x2e, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x2e, 0x46, 0x65, 0x74, 0x63, 0x68, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x14, 0x2e, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x4d, 0x0a, 0x13, 0x46, 0x65, 0x74, 0x63, 0x68,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x42, 0x79, 0x4f, 0x70, 0x65, 0x6e, 0x49, 0x44, 0x12, 0x20,
	0x2e, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x2e, 0x46, 0x65, 0x74, 0x63, 0x68, 0x42, 0x79, 0x54,
	0x68, 0x69, 0x72, 0x64, 0x50, 0x61, 0x72, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x14, 0x2e, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x51, 0x0a, 0x17, 0x46, 0x65, 0x74, 0x63, 0x68, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x20, 0x2e, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x2e, 0x46, 0x65, 0x74, 0x63, 0x68,
	0x42, 0x79, 0x54, 0x68, 0x69, 0x72, 0x64, 0x50, 0x61, 0x72, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x2e, 0x49, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x0a, 0x5a, 0x08, 0x2e, 0x2f, 0x6d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_member_proto_rawDescOnce sync.Once
	file_member_proto_rawDescData []byte
)

func file_member_proto_rawDescGZIP() []byte {
	file_member_proto_rawDescOnce.Do(func() {
		file_member_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_member_proto_rawDesc), len(file_member_proto_rawDesc)))
	})
	return file_member_proto_rawDescData
}

var file_member_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_member_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_member_proto_goTypes = []any{
	(UserFrom)(0),                    // 0: member.UserFrom
	(UserGender)(0),                  // 1: member.UserGender
	(MemberStatus)(0),                // 2: member.MemberStatus
	(*FetchByIDRequest)(nil),         // 3: member.FetchByIDRequest
	(*FetchByThirdPartyRequest)(nil), // 4: member.FetchByThirdPartyRequest
	(*ThirdPartyInfo)(nil),           // 5: member.ThirdPartyInfo
	(*RegisterMemberRequest)(nil),    // 6: member.RegisterMemberRequest
	(*RegisterMemberResponse)(nil),   // 7: member.RegisterMemberResponse
	(*MemberDetail)(nil),             // 8: member.MemberDetail
	(*IdentityInfo)(nil),             // 9: member.IdentityInfo
	(*LoginInfo)(nil),                // 10: member.LoginInfo
	(*PermissionInfo)(nil),           // 11: member.PermissionInfo
	(*AssetsInfo)(nil),               // 12: member.AssetsInfo
	(*InviterInfo)(nil),              // 13: member.InviterInfo
	(*timestamppb.Timestamp)(nil),    // 14: google.protobuf.Timestamp
}
var file_member_proto_depIdxs = []int32{
	5,  // 0: member.RegisterMemberRequest.third_party:type_name -> member.ThirdPartyInfo
	0,  // 1: member.MemberDetail.source:type_name -> member.UserFrom
	9,  // 2: member.MemberDetail.identity:type_name -> member.IdentityInfo
	10, // 3: member.MemberDetail.login:type_name -> member.LoginInfo
	12, // 4: member.MemberDetail.assets:type_name -> member.AssetsInfo
	13, // 5: member.MemberDetail.invitee:type_name -> member.InviterInfo
	11, // 6: member.MemberDetail.permission:type_name -> member.PermissionInfo
	5,  // 7: member.MemberDetail.third_party:type_name -> member.ThirdPartyInfo
	2,  // 8: member.MemberDetail.status:type_name -> member.MemberStatus
	14, // 9: member.IdentityInfo.join_at:type_name -> google.protobuf.Timestamp
	1,  // 10: member.IdentityInfo.gender:type_name -> member.UserGender
	6,  // 11: member.MembershipService.RegisterMember:input_type -> member.RegisterMemberRequest
	3,  // 12: member.MembershipService.FetchMemberByID:input_type -> member.FetchByIDRequest
	4,  // 13: member.MembershipService.FetchMemberByOpenID:input_type -> member.FetchByThirdPartyRequest
	4,  // 14: member.MembershipService.FetchMemberIdentityInfo:input_type -> member.FetchByThirdPartyRequest
	7,  // 15: member.MembershipService.RegisterMember:output_type -> member.RegisterMemberResponse
	8,  // 16: member.MembershipService.FetchMemberByID:output_type -> member.MemberDetail
	8,  // 17: member.MembershipService.FetchMemberByOpenID:output_type -> member.MemberDetail
	9,  // 18: member.MembershipService.FetchMemberIdentityInfo:output_type -> member.IdentityInfo
	15, // [15:19] is the sub-list for method output_type
	11, // [11:15] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_member_proto_init() }
func file_member_proto_init() {
	if File_member_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_member_proto_rawDesc), len(file_member_proto_rawDesc)),
			NumEnums:      3,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_member_proto_goTypes,
		DependencyIndexes: file_member_proto_depIdxs,
		EnumInfos:         file_member_proto_enumTypes,
		MessageInfos:      file_member_proto_msgTypes,
	}.Build()
	File_member_proto = out.File
	file_member_proto_goTypes = nil
	file_member_proto_depIdxs = nil
}
