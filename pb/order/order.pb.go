// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v5.29.3
// source: order.proto

package order

import (
	payment_info "./payment_info"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 其他类型定义
type SourceType int32

const (
	SourceType_SOURCE_UNSPECIFIED SourceType = 0 // 其他订单来源类型
)

// Enum value maps for SourceType.
var (
	SourceType_name = map[int32]string{
		0: "SOURCE_UNSPECIFIED",
	}
	SourceType_value = map[string]int32{
		"SOURCE_UNSPECIFIED": 0,
	}
)

func (x SourceType) Enum() *SourceType {
	p := new(SourceType)
	*p = x
	return p
}

func (x SourceType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SourceType) Descriptor() protoreflect.EnumDescriptor {
	return file_order_proto_enumTypes[0].Descriptor()
}

func (SourceType) Type() protoreflect.EnumType {
	return &file_order_proto_enumTypes[0]
}

func (x SourceType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SourceType.Descriptor instead.
func (SourceType) EnumDescriptor() ([]byte, []int) {
	return file_order_proto_rawDescGZIP(), []int{0}
}

type PickUpType int32

const (
	PickUpType_PICKUP_UNSPECIFIED PickUpType = 0 // 其他取货方式类型
)

// Enum value maps for PickUpType.
var (
	PickUpType_name = map[int32]string{
		0: "PICKUP_UNSPECIFIED",
	}
	PickUpType_value = map[string]int32{
		"PICKUP_UNSPECIFIED": 0,
	}
)

func (x PickUpType) Enum() *PickUpType {
	p := new(PickUpType)
	*p = x
	return p
}

func (x PickUpType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PickUpType) Descriptor() protoreflect.EnumDescriptor {
	return file_order_proto_enumTypes[1].Descriptor()
}

func (PickUpType) Type() protoreflect.EnumType {
	return &file_order_proto_enumTypes[1]
}

func (x PickUpType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PickUpType.Descriptor instead.
func (PickUpType) EnumDescriptor() ([]byte, []int) {
	return file_order_proto_rawDescGZIP(), []int{1}
}

type OrderStatus int32

const (
	OrderStatus_STATUS_UNSPECIFIED OrderStatus = 0 // 其他订单状态
)

// Enum value maps for OrderStatus.
var (
	OrderStatus_name = map[int32]string{
		0: "STATUS_UNSPECIFIED",
	}
	OrderStatus_value = map[string]int32{
		"STATUS_UNSPECIFIED": 0,
	}
)

func (x OrderStatus) Enum() *OrderStatus {
	p := new(OrderStatus)
	*p = x
	return p
}

func (x OrderStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (OrderStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_order_proto_enumTypes[2].Descriptor()
}

func (OrderStatus) Type() protoreflect.EnumType {
	return &file_order_proto_enumTypes[2]
}

func (x OrderStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use OrderStatus.Descriptor instead.
func (OrderStatus) EnumDescriptor() ([]byte, []int) {
	return file_order_proto_rawDescGZIP(), []int{2}
}

type RefundReasonType int32

const (
	RefundReasonType_REASON_UNSPECIFIED RefundReasonType = 0 // 其他退款原因类型
)

// Enum value maps for RefundReasonType.
var (
	RefundReasonType_name = map[int32]string{
		0: "REASON_UNSPECIFIED",
	}
	RefundReasonType_value = map[string]int32{
		"REASON_UNSPECIFIED": 0,
	}
)

func (x RefundReasonType) Enum() *RefundReasonType {
	p := new(RefundReasonType)
	*p = x
	return p
}

func (x RefundReasonType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RefundReasonType) Descriptor() protoreflect.EnumDescriptor {
	return file_order_proto_enumTypes[3].Descriptor()
}

func (RefundReasonType) Type() protoreflect.EnumType {
	return &file_order_proto_enumTypes[3]
}

func (x RefundReasonType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RefundReasonType.Descriptor instead.
func (RefundReasonType) EnumDescriptor() ([]byte, []int) {
	return file_order_proto_rawDescGZIP(), []int{3}
}

type RefundStatus int32

const (
	RefundStatus_STATUS_PENDING   RefundStatus = 0 // 待处理
	RefundStatus_STATUS_APPROVED  RefundStatus = 1 // 已审批
	RefundStatus_STATUS_COMPLETED RefundStatus = 2 // 已完成
)

// Enum value maps for RefundStatus.
var (
	RefundStatus_name = map[int32]string{
		0: "STATUS_PENDING",
		1: "STATUS_APPROVED",
		2: "STATUS_COMPLETED",
	}
	RefundStatus_value = map[string]int32{
		"STATUS_PENDING":   0,
		"STATUS_APPROVED":  1,
		"STATUS_COMPLETED": 2,
	}
)

func (x RefundStatus) Enum() *RefundStatus {
	p := new(RefundStatus)
	*p = x
	return p
}

func (x RefundStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RefundStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_order_proto_enumTypes[4].Descriptor()
}

func (RefundStatus) Type() protoreflect.EnumType {
	return &file_order_proto_enumTypes[4]
}

func (x RefundStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RefundStatus.Descriptor instead.
func (RefundStatus) EnumDescriptor() ([]byte, []int) {
	return file_order_proto_rawDescGZIP(), []int{4}
}

type RefundType int32

const (
	RefundType_TYPE_USER     RefundType = 0 // 用户类型
	RefundType_TYPE_MERCHANT RefundType = 1 // 商户类型
)

// Enum value maps for RefundType.
var (
	RefundType_name = map[int32]string{
		0: "TYPE_USER",
		1: "TYPE_MERCHANT",
	}
	RefundType_value = map[string]int32{
		"TYPE_USER":     0,
		"TYPE_MERCHANT": 1,
	}
)

func (x RefundType) Enum() *RefundType {
	p := new(RefundType)
	*p = x
	return p
}

func (x RefundType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RefundType) Descriptor() protoreflect.EnumDescriptor {
	return file_order_proto_enumTypes[5].Descriptor()
}

func (RefundType) Type() protoreflect.EnumType {
	return &file_order_proto_enumTypes[5]
}

func (x RefundType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RefundType.Descriptor instead.
func (RefundType) EnumDescriptor() ([]byte, []int) {
	return file_order_proto_rawDescGZIP(), []int{5}
}

// 订单信息查请求
type OrderRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OrderId       string                 `protobuf:"bytes,1,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"` // 订单号
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OrderRequest) Reset() {
	*x = OrderRequest{}
	mi := &file_order_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OrderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderRequest) ProtoMessage() {}

func (x *OrderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderRequest.ProtoReflect.Descriptor instead.
func (*OrderRequest) Descriptor() ([]byte, []int) {
	return file_order_proto_rawDescGZIP(), []int{0}
}

func (x *OrderRequest) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

// 订单信息详情
type OrderDetailRsp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                                 // 订单唯一标识
	Source        SourceType             `protobuf:"varint,2,opt,name=source,proto3,enum=order.SourceType" json:"source,omitempty"`  // 订单来源
	Pick          PickUpType             `protobuf:"varint,3,opt,name=pick,proto3,enum=order.PickUpType" json:"pick,omitempty"`      // 取货方式
	Stp           *StatusTimePoint       `protobuf:"bytes,4,opt,name=stp,proto3" json:"stp,omitempty"`                               // 订单状态时间节点
	Status        OrderStatus            `protobuf:"varint,5,opt,name=status,proto3,enum=order.OrderStatus" json:"status,omitempty"` // 状态
	Identity      *IdentityInfo          `protobuf:"bytes,6,opt,name=identity,proto3" json:"identity,omitempty"`                     // 订单标识信息
	Customer      *CustomerInfo          `protobuf:"bytes,7,opt,name=customer,proto3" json:"customer,omitempty"`                     // 客户信息
	Merchant      *MerchantInfo          `protobuf:"bytes,8,opt,name=merchant,proto3" json:"merchant,omitempty"`                     // 商户信息
	Buckets       []*Buckets             `protobuf:"bytes,9,rep,name=buckets,proto3" json:"buckets,omitempty"`                       // 商品列表
	Price         *PriceInfo             `protobuf:"bytes,11,opt,name=price,proto3" json:"price,omitempty"`                          // 价格信息
	Workflow      []*WorkflowInfo        `protobuf:"bytes,12,rep,name=workflow,proto3" json:"workflow,omitempty"`                    // 订单变更时间
	Refund        []*RefundApply         `protobuf:"bytes,13,rep,name=refund,proto3" json:"refund,omitempty"`                        // 退款申请
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OrderDetailRsp) Reset() {
	*x = OrderDetailRsp{}
	mi := &file_order_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OrderDetailRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderDetailRsp) ProtoMessage() {}

func (x *OrderDetailRsp) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderDetailRsp.ProtoReflect.Descriptor instead.
func (*OrderDetailRsp) Descriptor() ([]byte, []int) {
	return file_order_proto_rawDescGZIP(), []int{1}
}

func (x *OrderDetailRsp) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *OrderDetailRsp) GetSource() SourceType {
	if x != nil {
		return x.Source
	}
	return SourceType_SOURCE_UNSPECIFIED
}

func (x *OrderDetailRsp) GetPick() PickUpType {
	if x != nil {
		return x.Pick
	}
	return PickUpType_PICKUP_UNSPECIFIED
}

func (x *OrderDetailRsp) GetStp() *StatusTimePoint {
	if x != nil {
		return x.Stp
	}
	return nil
}

func (x *OrderDetailRsp) GetStatus() OrderStatus {
	if x != nil {
		return x.Status
	}
	return OrderStatus_STATUS_UNSPECIFIED
}

func (x *OrderDetailRsp) GetIdentity() *IdentityInfo {
	if x != nil {
		return x.Identity
	}
	return nil
}

func (x *OrderDetailRsp) GetCustomer() *CustomerInfo {
	if x != nil {
		return x.Customer
	}
	return nil
}

func (x *OrderDetailRsp) GetMerchant() *MerchantInfo {
	if x != nil {
		return x.Merchant
	}
	return nil
}

func (x *OrderDetailRsp) GetBuckets() []*Buckets {
	if x != nil {
		return x.Buckets
	}
	return nil
}

func (x *OrderDetailRsp) GetPrice() *PriceInfo {
	if x != nil {
		return x.Price
	}
	return nil
}

func (x *OrderDetailRsp) GetWorkflow() []*WorkflowInfo {
	if x != nil {
		return x.Workflow
	}
	return nil
}

func (x *OrderDetailRsp) GetRefund() []*RefundApply {
	if x != nil {
		return x.Refund
	}
	return nil
}

// 订单信息详情
type OrderPaymentRsp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                                 // 订单唯一标识
	Source        SourceType             `protobuf:"varint,2,opt,name=source,proto3,enum=order.SourceType" json:"source,omitempty"`  // 订单来源
	Pick          PickUpType             `protobuf:"varint,3,opt,name=pick,proto3,enum=order.PickUpType" json:"pick,omitempty"`      // 取货方式
	Stp           *StatusTimePoint       `protobuf:"bytes,4,opt,name=stp,proto3" json:"stp,omitempty"`                               // 订单状态时间节点
	Status        OrderStatus            `protobuf:"varint,5,opt,name=status,proto3,enum=order.OrderStatus" json:"status,omitempty"` // 状态
	Identity      *IdentityInfo          `protobuf:"bytes,6,opt,name=identity,proto3" json:"identity,omitempty"`                     // 订单标识信息
	Customer      *CustomerInfo          `protobuf:"bytes,7,opt,name=customer,proto3" json:"customer,omitempty"`                     // 客户信息
	Merchant      *MerchantInfo          `protobuf:"bytes,8,opt,name=merchant,proto3" json:"merchant,omitempty"`                     // 商户信息
	Price         *PriceInfo             `protobuf:"bytes,11,opt,name=price,proto3" json:"price,omitempty"`                          // 价格信息
	PayInfo       *payment_info.PayInfo  `protobuf:"bytes,12,opt,name=pay_info,json=payInfo,proto3" json:"pay_info,omitempty"`       // 价格信息
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OrderPaymentRsp) Reset() {
	*x = OrderPaymentRsp{}
	mi := &file_order_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OrderPaymentRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderPaymentRsp) ProtoMessage() {}

func (x *OrderPaymentRsp) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderPaymentRsp.ProtoReflect.Descriptor instead.
func (*OrderPaymentRsp) Descriptor() ([]byte, []int) {
	return file_order_proto_rawDescGZIP(), []int{2}
}

func (x *OrderPaymentRsp) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *OrderPaymentRsp) GetSource() SourceType {
	if x != nil {
		return x.Source
	}
	return SourceType_SOURCE_UNSPECIFIED
}

func (x *OrderPaymentRsp) GetPick() PickUpType {
	if x != nil {
		return x.Pick
	}
	return PickUpType_PICKUP_UNSPECIFIED
}

func (x *OrderPaymentRsp) GetStp() *StatusTimePoint {
	if x != nil {
		return x.Stp
	}
	return nil
}

func (x *OrderPaymentRsp) GetStatus() OrderStatus {
	if x != nil {
		return x.Status
	}
	return OrderStatus_STATUS_UNSPECIFIED
}

func (x *OrderPaymentRsp) GetIdentity() *IdentityInfo {
	if x != nil {
		return x.Identity
	}
	return nil
}

func (x *OrderPaymentRsp) GetCustomer() *CustomerInfo {
	if x != nil {
		return x.Customer
	}
	return nil
}

func (x *OrderPaymentRsp) GetMerchant() *MerchantInfo {
	if x != nil {
		return x.Merchant
	}
	return nil
}

func (x *OrderPaymentRsp) GetPrice() *PriceInfo {
	if x != nil {
		return x.Price
	}
	return nil
}

func (x *OrderPaymentRsp) GetPayInfo() *payment_info.PayInfo {
	if x != nil {
		return x.PayInfo
	}
	return nil
}

// 标识信息
type IdentityInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Remark        string                 `protobuf:"bytes,1,opt,name=remark,proto3" json:"remark,omitempty"`                            // 备注信息
	Postscript    string                 `protobuf:"bytes,2,opt,name=postscript,proto3" json:"postscript,omitempty"`                    // 脚注信息
	SortNum       string                 `protobuf:"bytes,3,opt,name=sort_num,json=sortNum,proto3" json:"sort_num,omitempty"`           // 排队序号
	OrderNo       string                 `protobuf:"bytes,4,opt,name=order_no,json=orderNo,proto3" json:"order_no,omitempty"`           // 订单号
	TableNo       string                 `protobuf:"bytes,5,opt,name=table_no,json=tableNo,proto3" json:"table_no,omitempty"`           // 座位号
	CurrentPos    int64                  `protobuf:"varint,6,opt,name=current_pos,json=currentPos,proto3" json:"current_pos,omitempty"` // 当前排队号
	TransactionId string                 `protobuf:"bytes,7,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IdentityInfo) Reset() {
	*x = IdentityInfo{}
	mi := &file_order_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IdentityInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IdentityInfo) ProtoMessage() {}

func (x *IdentityInfo) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IdentityInfo.ProtoReflect.Descriptor instead.
func (*IdentityInfo) Descriptor() ([]byte, []int) {
	return file_order_proto_rawDescGZIP(), []int{3}
}

func (x *IdentityInfo) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *IdentityInfo) GetPostscript() string {
	if x != nil {
		return x.Postscript
	}
	return ""
}

func (x *IdentityInfo) GetSortNum() string {
	if x != nil {
		return x.SortNum
	}
	return ""
}

func (x *IdentityInfo) GetOrderNo() string {
	if x != nil {
		return x.OrderNo
	}
	return ""
}

func (x *IdentityInfo) GetTableNo() string {
	if x != nil {
		return x.TableNo
	}
	return ""
}

func (x *IdentityInfo) GetCurrentPos() int64 {
	if x != nil {
		return x.CurrentPos
	}
	return 0
}

func (x *IdentityInfo) GetTransactionId() string {
	if x != nil {
		return x.TransactionId
	}
	return ""
}

// 价格信息
type PriceInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OriginalPrice string                 `protobuf:"bytes,1,opt,name=original_price,json=originalPrice,proto3" json:"original_price,omitempty"` // 原价
	SalePrice     string                 `protobuf:"bytes,2,opt,name=sale_price,json=salePrice,proto3" json:"sale_price,omitempty"`             // 特惠价
	ReducedPrice  string                 `protobuf:"bytes,3,opt,name=reduced_price,json=reducedPrice,proto3" json:"reduced_price,omitempty"`    // 减价
	RetailPrice   string                 `protobuf:"bytes,4,opt,name=retail_price,json=retailPrice,proto3" json:"retail_price,omitempty"`       // 零售价
	PayPrice      int64                  `protobuf:"varint,5,opt,name=pay_price,json=payPrice,proto3" json:"pay_price,omitempty"`               // 支付金额
	RealPrice     float64                `protobuf:"fixed64,6,opt,name=real_price,json=realPrice,proto3" json:"real_price,omitempty"`           // 待支付金额
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PriceInfo) Reset() {
	*x = PriceInfo{}
	mi := &file_order_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PriceInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PriceInfo) ProtoMessage() {}

func (x *PriceInfo) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PriceInfo.ProtoReflect.Descriptor instead.
func (*PriceInfo) Descriptor() ([]byte, []int) {
	return file_order_proto_rawDescGZIP(), []int{4}
}

func (x *PriceInfo) GetOriginalPrice() string {
	if x != nil {
		return x.OriginalPrice
	}
	return ""
}

func (x *PriceInfo) GetSalePrice() string {
	if x != nil {
		return x.SalePrice
	}
	return ""
}

func (x *PriceInfo) GetReducedPrice() string {
	if x != nil {
		return x.ReducedPrice
	}
	return ""
}

func (x *PriceInfo) GetRetailPrice() string {
	if x != nil {
		return x.RetailPrice
	}
	return ""
}

func (x *PriceInfo) GetPayPrice() int64 {
	if x != nil {
		return x.PayPrice
	}
	return 0
}

func (x *PriceInfo) GetRealPrice() float64 {
	if x != nil {
		return x.RealPrice
	}
	return 0
}

// 订单状态时间节点
type StatusTimePoint struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CreatedAt     int64                  `protobuf:"varint,1,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`       // 订单创建时间
	PayAt         int64                  `protobuf:"varint,2,opt,name=pay_at,json=payAt,proto3" json:"pay_at,omitempty"`                   // 支付中时间
	PayedAt       int64                  `protobuf:"varint,3,opt,name=payed_at,json=payedAt,proto3" json:"payed_at,omitempty"`             // 支付成功时间
	ReviewAt      int64                  `protobuf:"varint,4,opt,name=review_at,json=reviewAt,proto3" json:"review_at,omitempty"`          // 评价时间
	CompletedAt   int64                  `protobuf:"varint,5,opt,name=completed_at,json=completedAt,proto3" json:"completed_at,omitempty"` // 完成时间
	ClosedAt      int64                  `protobuf:"varint,6,opt,name=closed_at,json=closedAt,proto3" json:"closed_at,omitempty"`          // 关闭订单时间
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StatusTimePoint) Reset() {
	*x = StatusTimePoint{}
	mi := &file_order_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StatusTimePoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusTimePoint) ProtoMessage() {}

func (x *StatusTimePoint) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusTimePoint.ProtoReflect.Descriptor instead.
func (*StatusTimePoint) Descriptor() ([]byte, []int) {
	return file_order_proto_rawDescGZIP(), []int{5}
}

func (x *StatusTimePoint) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *StatusTimePoint) GetPayAt() int64 {
	if x != nil {
		return x.PayAt
	}
	return 0
}

func (x *StatusTimePoint) GetPayedAt() int64 {
	if x != nil {
		return x.PayedAt
	}
	return 0
}

func (x *StatusTimePoint) GetReviewAt() int64 {
	if x != nil {
		return x.ReviewAt
	}
	return 0
}

func (x *StatusTimePoint) GetCompletedAt() int64 {
	if x != nil {
		return x.CompletedAt
	}
	return 0
}

func (x *StatusTimePoint) GetClosedAt() int64 {
	if x != nil {
		return x.ClosedAt
	}
	return 0
}

// 客户信息
type CustomerInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Mobile        string                 `protobuf:"bytes,1,opt,name=mobile,proto3" json:"mobile,omitempty"`   // 客户手机号
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`       // 客户姓名
	Id            string                 `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`           // 客户ID
	Account       string                 `protobuf:"bytes,4,opt,name=account,proto3" json:"account,omitempty"` // 客户账户
	Avatar        string                 `protobuf:"bytes,5,opt,name=avatar,proto3" json:"avatar,omitempty"`   // 客户头像
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CustomerInfo) Reset() {
	*x = CustomerInfo{}
	mi := &file_order_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CustomerInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CustomerInfo) ProtoMessage() {}

func (x *CustomerInfo) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CustomerInfo.ProtoReflect.Descriptor instead.
func (*CustomerInfo) Descriptor() ([]byte, []int) {
	return file_order_proto_rawDescGZIP(), []int{6}
}

func (x *CustomerInfo) GetMobile() string {
	if x != nil {
		return x.Mobile
	}
	return ""
}

func (x *CustomerInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CustomerInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CustomerInfo) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *CustomerInfo) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

// 商户信息
type MerchantInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Mobile        string                 `protobuf:"bytes,1,opt,name=mobile,proto3" json:"mobile,omitempty"`   // 商户手机号
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`       // 商户名称
	Id            string                 `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`           // 商户ID
	Address       string                 `protobuf:"bytes,4,opt,name=address,proto3" json:"address,omitempty"` // 商户地址
	Lbs           *LBSInfo               `protobuf:"bytes,5,opt,name=lbs,proto3" json:"lbs,omitempty"`         // 地理位置信息
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MerchantInfo) Reset() {
	*x = MerchantInfo{}
	mi := &file_order_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MerchantInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MerchantInfo) ProtoMessage() {}

func (x *MerchantInfo) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MerchantInfo.ProtoReflect.Descriptor instead.
func (*MerchantInfo) Descriptor() ([]byte, []int) {
	return file_order_proto_rawDescGZIP(), []int{7}
}

func (x *MerchantInfo) GetMobile() string {
	if x != nil {
		return x.Mobile
	}
	return ""
}

func (x *MerchantInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MerchantInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *MerchantInfo) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *MerchantInfo) GetLbs() *LBSInfo {
	if x != nil {
		return x.Lbs
	}
	return nil
}

// 地理位置信息
type LBSInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Longitude     float64                `protobuf:"fixed64,1,opt,name=longitude,proto3" json:"longitude,omitempty"` // 经度
	Latitude      float64                `protobuf:"fixed64,2,opt,name=latitude,proto3" json:"latitude,omitempty"`   // 纬度
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LBSInfo) Reset() {
	*x = LBSInfo{}
	mi := &file_order_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LBSInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LBSInfo) ProtoMessage() {}

func (x *LBSInfo) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LBSInfo.ProtoReflect.Descriptor instead.
func (*LBSInfo) Descriptor() ([]byte, []int) {
	return file_order_proto_rawDescGZIP(), []int{8}
}

func (x *LBSInfo) GetLongitude() float64 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

func (x *LBSInfo) GetLatitude() float64 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

// 商品信息
type Buckets struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                                         // 商品ID
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`                                     // 商品名称
	Number        int32                  `protobuf:"varint,3,opt,name=number,proto3" json:"number,omitempty"`                                // 商品数量
	Price         float64                `protobuf:"fixed64,4,opt,name=price,proto3" json:"price,omitempty"`                                 // 商品单价
	OriginAmount  string                 `protobuf:"bytes,5,opt,name=origin_amount,json=originAmount,proto3" json:"origin_amount,omitempty"` // 原始价格
	Unit          string                 `protobuf:"bytes,6,opt,name=unit,proto3" json:"unit,omitempty"`                                     // 商品单位
	Props         []int32                `protobuf:"varint,8,rep,packed,name=props,proto3" json:"props,omitempty"`                           // 属性ID列表
	PropsText     string                 `protobuf:"bytes,9,opt,name=props_text,json=propsText,proto3" json:"props_text,omitempty"`          // 属性简述
	Image         string                 `protobuf:"bytes,10,opt,name=image,proto3" json:"image,omitempty"`                                  // 商品图片
	PropsItem     []*PropsItemInfo       `protobuf:"bytes,11,rep,name=props_item,json=propsItem,proto3" json:"props_item,omitempty"`         // 属性参数
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Buckets) Reset() {
	*x = Buckets{}
	mi := &file_order_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Buckets) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Buckets) ProtoMessage() {}

func (x *Buckets) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Buckets.ProtoReflect.Descriptor instead.
func (*Buckets) Descriptor() ([]byte, []int) {
	return file_order_proto_rawDescGZIP(), []int{9}
}

func (x *Buckets) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Buckets) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Buckets) GetNumber() int32 {
	if x != nil {
		return x.Number
	}
	return 0
}

func (x *Buckets) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *Buckets) GetOriginAmount() string {
	if x != nil {
		return x.OriginAmount
	}
	return ""
}

func (x *Buckets) GetUnit() string {
	if x != nil {
		return x.Unit
	}
	return ""
}

func (x *Buckets) GetProps() []int32 {
	if x != nil {
		return x.Props
	}
	return nil
}

func (x *Buckets) GetPropsText() string {
	if x != nil {
		return x.PropsText
	}
	return ""
}

func (x *Buckets) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *Buckets) GetPropsItem() []*PropsItemInfo {
	if x != nil {
		return x.PropsItem
	}
	return nil
}

// 操作记录
type WorkflowInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Label         string                 `protobuf:"bytes,1,opt,name=label,proto3" json:"label,omitempty"`                             // 标签
	Description   string                 `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`                 // 描述
	Operator      string                 `protobuf:"bytes,3,opt,name=operator,proto3" json:"operator,omitempty"`                       // 操作人
	OperatorId    string                 `protobuf:"bytes,4,opt,name=operator_id,json=operatorId,proto3" json:"operator_id,omitempty"` // 操作人ID
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WorkflowInfo) Reset() {
	*x = WorkflowInfo{}
	mi := &file_order_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WorkflowInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkflowInfo) ProtoMessage() {}

func (x *WorkflowInfo) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkflowInfo.ProtoReflect.Descriptor instead.
func (*WorkflowInfo) Descriptor() ([]byte, []int) {
	return file_order_proto_rawDescGZIP(), []int{10}
}

func (x *WorkflowInfo) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *WorkflowInfo) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *WorkflowInfo) GetOperator() string {
	if x != nil {
		return x.Operator
	}
	return ""
}

func (x *WorkflowInfo) GetOperatorId() string {
	if x != nil {
		return x.OperatorId
	}
	return ""
}

// 属性参数信息
type PropsItemInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	IsDefault     int32                  `protobuf:"varint,1,opt,name=is_default,json=isDefault,proto3" json:"is_default,omitempty"` // 是否默认
	Id            int32                  `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`                                // 属性ID
	Code          string                 `protobuf:"bytes,3,opt,name=code,proto3" json:"code,omitempty"`                             // 属性代码
	Value         string                 `protobuf:"bytes,4,opt,name=value,proto3" json:"value,omitempty"`                           // 属性值
	Price         int32                  `protobuf:"varint,5,opt,name=price,proto3" json:"price,omitempty"`                          // 属性价格
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PropsItemInfo) Reset() {
	*x = PropsItemInfo{}
	mi := &file_order_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PropsItemInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PropsItemInfo) ProtoMessage() {}

func (x *PropsItemInfo) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PropsItemInfo.ProtoReflect.Descriptor instead.
func (*PropsItemInfo) Descriptor() ([]byte, []int) {
	return file_order_proto_rawDescGZIP(), []int{11}
}

func (x *PropsItemInfo) GetIsDefault() int32 {
	if x != nil {
		return x.IsDefault
	}
	return 0
}

func (x *PropsItemInfo) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *PropsItemInfo) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *PropsItemInfo) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *PropsItemInfo) GetPrice() int32 {
	if x != nil {
		return x.Price
	}
	return 0
}

// 退款申请记录
type RefundApply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                                                              // 申请单ID
	Type          RefundReasonType       `protobuf:"varint,2,opt,name=type,proto3,enum=order.RefundReasonType" json:"type,omitempty"`                             // 申请单类型
	Status        RefundStatus           `protobuf:"varint,3,opt,name=status,proto3,enum=order.RefundStatus" json:"status,omitempty"`                             // 申请状态
	Audit         string                 `protobuf:"bytes,4,opt,name=audit,proto3" json:"audit,omitempty"`                                                        // 审批类型
	Reason        string                 `protobuf:"bytes,5,opt,name=reason,proto3" json:"reason,omitempty"`                                                      // 退款原因
	Amount        int64                  `protobuf:"varint,6,opt,name=amount,proto3" json:"amount,omitempty"`                                                     // 退款金额
	Operator      string                 `protobuf:"bytes,7,opt,name=operator,proto3" json:"operator,omitempty"`                                                  // 处理人
	OperatorId    string                 `protobuf:"bytes,8,opt,name=operator_id,json=operatorId,proto3" json:"operator_id,omitempty"`                            // 操作人ID
	Applier       string                 `protobuf:"bytes,9,opt,name=applier,proto3" json:"applier,omitempty"`                                                    // 申请发起人ID
	ApplierType   RefundType             `protobuf:"varint,10,opt,name=applier_type,json=applierType,proto3,enum=order.RefundType" json:"applier_type,omitempty"` // 发起人类型
	CreatedAt     int64                  `protobuf:"varint,11,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`                             // 创建时间
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RefundApply) Reset() {
	*x = RefundApply{}
	mi := &file_order_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RefundApply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefundApply) ProtoMessage() {}

func (x *RefundApply) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefundApply.ProtoReflect.Descriptor instead.
func (*RefundApply) Descriptor() ([]byte, []int) {
	return file_order_proto_rawDescGZIP(), []int{12}
}

func (x *RefundApply) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *RefundApply) GetType() RefundReasonType {
	if x != nil {
		return x.Type
	}
	return RefundReasonType_REASON_UNSPECIFIED
}

func (x *RefundApply) GetStatus() RefundStatus {
	if x != nil {
		return x.Status
	}
	return RefundStatus_STATUS_PENDING
}

func (x *RefundApply) GetAudit() string {
	if x != nil {
		return x.Audit
	}
	return ""
}

func (x *RefundApply) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *RefundApply) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *RefundApply) GetOperator() string {
	if x != nil {
		return x.Operator
	}
	return ""
}

func (x *RefundApply) GetOperatorId() string {
	if x != nil {
		return x.OperatorId
	}
	return ""
}

func (x *RefundApply) GetApplier() string {
	if x != nil {
		return x.Applier
	}
	return ""
}

func (x *RefundApply) GetApplierType() RefundType {
	if x != nil {
		return x.ApplierType
	}
	return RefundType_TYPE_USER
}

func (x *RefundApply) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

var File_order_proto protoreflect.FileDescriptor

var file_order_proto_rawDesc = string([]byte{
	0x0a, 0x0b, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x1a, 0x12, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x6e,
	0x66, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x29, 0x0a, 0x0c, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x49, 0x64, 0x22, 0x8a, 0x04, 0x0a, 0x0e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x52, 0x73, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x29, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x53,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x12, 0x25, 0x0a, 0x04, 0x70, 0x69, 0x63, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x11, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x50, 0x69, 0x63, 0x6b, 0x55, 0x70, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x04, 0x70, 0x69, 0x63, 0x6b, 0x12, 0x28, 0x0a, 0x03, 0x73, 0x74, 0x70, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x54, 0x69, 0x6d, 0x65, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x03, 0x73,
	0x74, 0x70, 0x12, 0x2a, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x12, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2f,
	0x0a, 0x08, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x13, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12,
	0x2f, 0x0a, 0x08, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x13, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x12, 0x2f, 0x0a, 0x08, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x4d, 0x65, 0x72, 0x63, 0x68,
	0x61, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e,
	0x74, 0x12, 0x28, 0x0a, 0x07, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x18, 0x09, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x42, 0x75, 0x63, 0x6b, 0x65,
	0x74, 0x73, 0x52, 0x07, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x12, 0x26, 0x0a, 0x05, 0x70,
	0x72, 0x69, 0x63, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x2e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x70, 0x72,
	0x69, 0x63, 0x65, 0x12, 0x2f, 0x0a, 0x08, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x18,
	0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x57, 0x6f,
	0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x77, 0x6f, 0x72, 0x6b,
	0x66, 0x6c, 0x6f, 0x77, 0x12, 0x2a, 0x0a, 0x06, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x18, 0x0d,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x66,
	0x75, 0x6e, 0x64, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x52, 0x06, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64,
	0x22, 0xb6, 0x03, 0x0a, 0x0f, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x52, 0x73, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x29, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x53, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12,
	0x25, 0x0a, 0x04, 0x70, 0x69, 0x63, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x50, 0x69, 0x63, 0x6b, 0x55, 0x70, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x04, 0x70, 0x69, 0x63, 0x6b, 0x12, 0x28, 0x0a, 0x03, 0x73, 0x74, 0x70, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x54, 0x69, 0x6d, 0x65, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x03, 0x73, 0x74, 0x70,
	0x12, 0x2a, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x12, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2f, 0x0a, 0x08,
	0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13,
	0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x08, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x2f, 0x0a,
	0x08, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x13, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x12, 0x2f,
	0x0a, 0x08, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x13, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e,
	0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x12,
	0x26, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10,
	0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x30, 0x0a, 0x08, 0x70, 0x61, 0x79, 0x5f, 0x69,
	0x6e, 0x66, 0x6f, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x50, 0x61, 0x79, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x07, 0x70, 0x61, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0xdf, 0x01, 0x0a, 0x0c, 0x49, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65,
	0x6d, 0x61, 0x72, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61,
	0x72, 0x6b, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x6f, 0x73, 0x74, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x6f, 0x73, 0x74, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x6f, 0x72, 0x74, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x6f, 0x72, 0x74, 0x4e, 0x75, 0x6d, 0x12, 0x19, 0x0a,
	0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x6e, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x6f, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x61, 0x62, 0x6c,
	0x65, 0x5f, 0x6e, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x61, 0x62, 0x6c,
	0x65, 0x4e, 0x6f, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x70,
	0x6f, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x74, 0x50, 0x6f, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0xd5, 0x01, 0x0a, 0x09,
	0x50, 0x72, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x25, 0x0a, 0x0e, 0x6f, 0x72, 0x69,
	0x67, 0x69, 0x6e, 0x61, 0x6c, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65,
	0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x61, 0x6c, 0x65, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x61, 0x6c, 0x65, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12,
	0x23, 0x0a, 0x0d, 0x72, 0x65, 0x64, 0x75, 0x63, 0x65, 0x64, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x64, 0x75, 0x63, 0x65, 0x64, 0x50,
	0x72, 0x69, 0x63, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x5f, 0x70,
	0x72, 0x69, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x79, 0x5f, 0x70,
	0x72, 0x69, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x79, 0x50,
	0x72, 0x69, 0x63, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x61, 0x6c, 0x5f, 0x70, 0x72, 0x69,
	0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x72, 0x65, 0x61, 0x6c, 0x50, 0x72,
	0x69, 0x63, 0x65, 0x22, 0xbf, 0x01, 0x0a, 0x0f, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x54, 0x69,
	0x6d, 0x65, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x70, 0x61, 0x79, 0x5f, 0x61, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x70, 0x61, 0x79, 0x41, 0x74, 0x12, 0x19, 0x0a,
	0x08, 0x70, 0x61, 0x79, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x07, 0x70, 0x61, 0x79, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x65, 0x76, 0x69,
	0x65, 0x77, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x72, 0x65, 0x76,
	0x69, 0x65, 0x77, 0x41, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74,
	0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x63, 0x6f, 0x6d,
	0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6c, 0x6f, 0x73,
	0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x6c, 0x6f,
	0x73, 0x65, 0x64, 0x41, 0x74, 0x22, 0x7c, 0x0a, 0x0c, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65,
	0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x61,
	0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x76, 0x61,
	0x74, 0x61, 0x72, 0x22, 0x86, 0x01, 0x0a, 0x0c, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x20, 0x0a, 0x03, 0x6c, 0x62,
	0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e,
	0x4c, 0x42, 0x53, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x03, 0x6c, 0x62, 0x73, 0x22, 0x43, 0x0a, 0x07,
	0x4c, 0x42, 0x53, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69,
	0x74, 0x75, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x6c, 0x6f, 0x6e, 0x67,
	0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64,
	0x65, 0x22, 0x94, 0x02, 0x0a, 0x07, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69,
	0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12,
	0x23, 0x0a, 0x0d, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x41, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x6e, 0x69, 0x74, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x75, 0x6e, 0x69, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x6f, 0x70,
	0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x05, 0x52, 0x05, 0x70, 0x72, 0x6f, 0x70, 0x73, 0x12, 0x1d,
	0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x70, 0x73, 0x54, 0x65, 0x78, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6d,
	0x61, 0x67, 0x65, 0x12, 0x33, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x73, 0x5f, 0x69, 0x74, 0x65,
	0x6d, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e,
	0x50, 0x72, 0x6f, 0x70, 0x73, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x70,
	0x72, 0x6f, 0x70, 0x73, 0x49, 0x74, 0x65, 0x6d, 0x22, 0x83, 0x01, 0x0a, 0x0c, 0x57, 0x6f, 0x72,
	0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61, 0x62,
	0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x12,
	0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x1f, 0x0a,
	0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x22, 0x7e,
	0x0a, 0x0d, 0x50, 0x72, 0x6f, 0x70, 0x73, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x09, 0x69, 0x73, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x22, 0xe9,
	0x02, 0x0a, 0x0b, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x2b,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x61, 0x73, 0x6f,
	0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x2b, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x75, 0x64, 0x69,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x75, 0x64, 0x69, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a,
	0x0a, 0x08, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x6f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x61,
	0x70, 0x70, 0x6c, 0x69, 0x65, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x70,
	0x70, 0x6c, 0x69, 0x65, 0x72, 0x12, 0x34, 0x0a, 0x0c, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x65, 0x72,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0b,
	0x61, 0x70, 0x70, 0x6c, 0x69, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x2a, 0x24, 0x0a, 0x0a, 0x53, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x12, 0x53, 0x4f, 0x55, 0x52,
	0x43, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00,
	0x2a, 0x24, 0x0a, 0x0a, 0x50, 0x69, 0x63, 0x6b, 0x55, 0x70, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16,
	0x0a, 0x12, 0x50, 0x49, 0x43, 0x4b, 0x55, 0x50, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49,
	0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x2a, 0x25, 0x0a, 0x0b, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x12, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f,
	0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x2a, 0x2a, 0x0a,
	0x10, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x16, 0x0a, 0x12, 0x52, 0x45, 0x41, 0x53, 0x4f, 0x4e, 0x5f, 0x55, 0x4e, 0x53, 0x50,
	0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x2a, 0x4d, 0x0a, 0x0c, 0x52, 0x65, 0x66,
	0x75, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x0e, 0x53, 0x54, 0x41,
	0x54, 0x55, 0x53, 0x5f, 0x50, 0x45, 0x4e, 0x44, 0x49, 0x4e, 0x47, 0x10, 0x00, 0x12, 0x13, 0x0a,
	0x0f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x41, 0x50, 0x50, 0x52, 0x4f, 0x56, 0x45, 0x44,
	0x10, 0x01, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x43, 0x4f, 0x4d,
	0x50, 0x4c, 0x45, 0x54, 0x45, 0x44, 0x10, 0x02, 0x2a, 0x2e, 0x0a, 0x0a, 0x52, 0x65, 0x66, 0x75,
	0x6e, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0d, 0x0a, 0x09, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55,
	0x53, 0x45, 0x52, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4d, 0x45,
	0x52, 0x43, 0x48, 0x41, 0x4e, 0x54, 0x10, 0x01, 0x32, 0xd8, 0x01, 0x0a, 0x0c, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x3e, 0x0a, 0x10, 0x46, 0x65, 0x74,
	0x63, 0x68, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x13, 0x2e,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x15, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x73, 0x70, 0x12, 0x44, 0x0a, 0x15, 0x46, 0x65, 0x74,
	0x63, 0x68, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x13, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x73, 0x70, 0x12,
	0x42, 0x0a, 0x16, 0x46, 0x65, 0x74, 0x63, 0x68, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x13, 0x2e, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13,
	0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49,
	0x6e, 0x66, 0x6f, 0x42, 0x09, 0x5a, 0x07, 0x2e, 0x2f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_order_proto_rawDescOnce sync.Once
	file_order_proto_rawDescData []byte
)

func file_order_proto_rawDescGZIP() []byte {
	file_order_proto_rawDescOnce.Do(func() {
		file_order_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_order_proto_rawDesc), len(file_order_proto_rawDesc)))
	})
	return file_order_proto_rawDescData
}

var file_order_proto_enumTypes = make([]protoimpl.EnumInfo, 6)
var file_order_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_order_proto_goTypes = []any{
	(SourceType)(0),              // 0: order.SourceType
	(PickUpType)(0),              // 1: order.PickUpType
	(OrderStatus)(0),             // 2: order.OrderStatus
	(RefundReasonType)(0),        // 3: order.RefundReasonType
	(RefundStatus)(0),            // 4: order.RefundStatus
	(RefundType)(0),              // 5: order.RefundType
	(*OrderRequest)(nil),         // 6: order.OrderRequest
	(*OrderDetailRsp)(nil),       // 7: order.OrderDetailRsp
	(*OrderPaymentRsp)(nil),      // 8: order.OrderPaymentRsp
	(*IdentityInfo)(nil),         // 9: order.IdentityInfo
	(*PriceInfo)(nil),            // 10: order.PriceInfo
	(*StatusTimePoint)(nil),      // 11: order.StatusTimePoint
	(*CustomerInfo)(nil),         // 12: order.CustomerInfo
	(*MerchantInfo)(nil),         // 13: order.MerchantInfo
	(*LBSInfo)(nil),              // 14: order.LBSInfo
	(*Buckets)(nil),              // 15: order.Buckets
	(*WorkflowInfo)(nil),         // 16: order.WorkflowInfo
	(*PropsItemInfo)(nil),        // 17: order.PropsItemInfo
	(*RefundApply)(nil),          // 18: order.RefundApply
	(*payment_info.PayInfo)(nil), // 19: payment_info.PayInfo
}
var file_order_proto_depIdxs = []int32{
	0,  // 0: order.OrderDetailRsp.source:type_name -> order.SourceType
	1,  // 1: order.OrderDetailRsp.pick:type_name -> order.PickUpType
	11, // 2: order.OrderDetailRsp.stp:type_name -> order.StatusTimePoint
	2,  // 3: order.OrderDetailRsp.status:type_name -> order.OrderStatus
	9,  // 4: order.OrderDetailRsp.identity:type_name -> order.IdentityInfo
	12, // 5: order.OrderDetailRsp.customer:type_name -> order.CustomerInfo
	13, // 6: order.OrderDetailRsp.merchant:type_name -> order.MerchantInfo
	15, // 7: order.OrderDetailRsp.buckets:type_name -> order.Buckets
	10, // 8: order.OrderDetailRsp.price:type_name -> order.PriceInfo
	16, // 9: order.OrderDetailRsp.workflow:type_name -> order.WorkflowInfo
	18, // 10: order.OrderDetailRsp.refund:type_name -> order.RefundApply
	0,  // 11: order.OrderPaymentRsp.source:type_name -> order.SourceType
	1,  // 12: order.OrderPaymentRsp.pick:type_name -> order.PickUpType
	11, // 13: order.OrderPaymentRsp.stp:type_name -> order.StatusTimePoint
	2,  // 14: order.OrderPaymentRsp.status:type_name -> order.OrderStatus
	9,  // 15: order.OrderPaymentRsp.identity:type_name -> order.IdentityInfo
	12, // 16: order.OrderPaymentRsp.customer:type_name -> order.CustomerInfo
	13, // 17: order.OrderPaymentRsp.merchant:type_name -> order.MerchantInfo
	10, // 18: order.OrderPaymentRsp.price:type_name -> order.PriceInfo
	19, // 19: order.OrderPaymentRsp.pay_info:type_name -> payment_info.PayInfo
	14, // 20: order.MerchantInfo.lbs:type_name -> order.LBSInfo
	17, // 21: order.Buckets.props_item:type_name -> order.PropsItemInfo
	3,  // 22: order.RefundApply.type:type_name -> order.RefundReasonType
	4,  // 23: order.RefundApply.status:type_name -> order.RefundStatus
	5,  // 24: order.RefundApply.applier_type:type_name -> order.RefundType
	6,  // 25: order.OrderService.FetchOrderDetail:input_type -> order.OrderRequest
	6,  // 26: order.OrderService.FetchOrderPaymentInfo:input_type -> order.OrderRequest
	6,  // 27: order.OrderService.FetchOrderIdentityInfo:input_type -> order.OrderRequest
	7,  // 28: order.OrderService.FetchOrderDetail:output_type -> order.OrderDetailRsp
	8,  // 29: order.OrderService.FetchOrderPaymentInfo:output_type -> order.OrderPaymentRsp
	9,  // 30: order.OrderService.FetchOrderIdentityInfo:output_type -> order.IdentityInfo
	28, // [28:31] is the sub-list for method output_type
	25, // [25:28] is the sub-list for method input_type
	25, // [25:25] is the sub-list for extension type_name
	25, // [25:25] is the sub-list for extension extendee
	0,  // [0:25] is the sub-list for field type_name
}

func init() { file_order_proto_init() }
func file_order_proto_init() {
	if File_order_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_order_proto_rawDesc), len(file_order_proto_rawDesc)),
			NumEnums:      6,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_order_proto_goTypes,
		DependencyIndexes: file_order_proto_depIdxs,
		EnumInfos:         file_order_proto_enumTypes,
		MessageInfos:      file_order_proto_msgTypes,
	}.Build()
	File_order_proto = out.File
	file_order_proto_goTypes = nil
	file_order_proto_depIdxs = nil
}
